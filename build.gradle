plugins {
    id 'base'
}

allprojects {
    group = 'com.hmdev.messaging'
    version = '1.0.0'
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = '11'
    targetCompatibility = '11'

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
}

configure(project(":agents:python-agent")) {
    // Prevent Gradle from treating it as a Java project
    tasks.configureEach {
        enabled = false
    }
}

ext {
    // Default compose file path (absolute) - always use the repository compose file
    def defaultCompose = new File(projectDir, 'docker/docker-compose.yml').absolutePath

    // Always use the repo compose file; the Gradle helper no longer supports a dockerhub property
    project.ext.set('messagingDockerComposeFile', defaultCompose.toString())
}

// Build the messaging-service artifact and start the compose stack
tasks.register('messagingServiceUp', Exec) {
    group = 'docker'
    description = 'Build messaging-service jar and start docker compose stack (up --build -d)'
    // Ensure the host-side jar/resources are built before running docker compose
    dependsOn ':services:messaging-service:build'
    executable = 'docker'
    args = ['compose', '-f', messagingDockerComposeFile, 'up', '--build', '-d']
    standardInput = System.in
}

// Stop and remove the messaging service compose stack and volumes
tasks.register('messagingServiceDown', Exec) {
    group = 'docker'
    description = 'Stop and remove messaging service compose stack and volumes'
    executable = 'docker'
    args = ['compose', '-f', messagingDockerComposeFile, 'down', '-v']
    standardInput = System.in
}
